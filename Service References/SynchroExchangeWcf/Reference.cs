//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Com.Eudonet.Xrm.SynchroExchangeWcf {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SynchroExchangeWcf.ISynchroWCF")]
    public interface ISynchroWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchroWCF/CreateUpdateAppointment", ReplyAction="http://tempuri.org/ISynchroWCF/CreateUpdateAppointmentResponse")]
        EudoSynchroExchangeInterface.ResponseContract CreateUpdateAppointment(EudoSynchroExchangeInterface.AuthentificationContract paramConnexion, EudoSynchroExchangeInterface.EventContract paramEvt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchroWCF/DeleteAppointment", ReplyAction="http://tempuri.org/ISynchroWCF/DeleteAppointmentResponse")]
        EudoSynchroExchangeInterface.ResponseContract DeleteAppointment(EudoSynchroExchangeInterface.AuthentificationContract paramConnexion, EudoSynchroExchangeInterface.EventContract paramEvt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchroWCF/ActivateUsers", ReplyAction="http://tempuri.org/ISynchroWCF/ActivateUsersResponse")]
        EudoSynchroExchangeInterface.ResponseContract[] ActivateUsers(EudoSynchroExchangeInterface.AuthentificationContract[] listUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchroWCF/ActivateUser", ReplyAction="http://tempuri.org/ISynchroWCF/ActivateUserResponse")]
        EudoSynchroExchangeInterface.ResponseContract ActivateUser(EudoSynchroExchangeInterface.AuthentificationContract paramConnexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchroWCF/RenewSubscriptions", ReplyAction="http://tempuri.org/ISynchroWCF/RenewSubscriptionsResponse")]
        EudoSynchroExchangeInterface.ResponseContract[] RenewSubscriptions(EudoSynchroExchangeInterface.AuthentificationContract[] listParamConnexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchroWCF/RenewSubscription", ReplyAction="http://tempuri.org/ISynchroWCF/RenewSubscriptionResponse")]
        EudoSynchroExchangeInterface.ResponseContract RenewSubscription(EudoSynchroExchangeInterface.AuthentificationContract paramConnexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchroWCF/DeactivateUsers", ReplyAction="http://tempuri.org/ISynchroWCF/DeactivateUsersResponse")]
        EudoSynchroExchangeInterface.ResponseContract DeactivateUsers(EudoSynchroExchangeInterface.AuthentificationContract[] listUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchroWCF/DeactivateUser", ReplyAction="http://tempuri.org/ISynchroWCF/DeactivateUserResponse")]
        EudoSynchroExchangeInterface.ResponseContract DeactivateUser(EudoSynchroExchangeInterface.AuthentificationContract paramConnexion);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISynchroWCFChannel : Com.Eudonet.Xrm.SynchroExchangeWcf.ISynchroWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SynchroWCFClient : System.ServiceModel.ClientBase<Com.Eudonet.Xrm.SynchroExchangeWcf.ISynchroWCF>, Com.Eudonet.Xrm.SynchroExchangeWcf.ISynchroWCF {
        
        public SynchroWCFClient() {
        }
        
        public SynchroWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SynchroWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SynchroWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SynchroWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EudoSynchroExchangeInterface.ResponseContract CreateUpdateAppointment(EudoSynchroExchangeInterface.AuthentificationContract paramConnexion, EudoSynchroExchangeInterface.EventContract paramEvt) {
            return base.Channel.CreateUpdateAppointment(paramConnexion, paramEvt);
        }
        
        public EudoSynchroExchangeInterface.ResponseContract DeleteAppointment(EudoSynchroExchangeInterface.AuthentificationContract paramConnexion, EudoSynchroExchangeInterface.EventContract paramEvt) {
            return base.Channel.DeleteAppointment(paramConnexion, paramEvt);
        }
        
        public EudoSynchroExchangeInterface.ResponseContract[] ActivateUsers(EudoSynchroExchangeInterface.AuthentificationContract[] listUsers) {
            return base.Channel.ActivateUsers(listUsers);
        }
        
        public EudoSynchroExchangeInterface.ResponseContract ActivateUser(EudoSynchroExchangeInterface.AuthentificationContract paramConnexion) {
            return base.Channel.ActivateUser(paramConnexion);
        }
        
        public EudoSynchroExchangeInterface.ResponseContract[] RenewSubscriptions(EudoSynchroExchangeInterface.AuthentificationContract[] listParamConnexion) {
            return base.Channel.RenewSubscriptions(listParamConnexion);
        }
        
        public EudoSynchroExchangeInterface.ResponseContract RenewSubscription(EudoSynchroExchangeInterface.AuthentificationContract paramConnexion) {
            return base.Channel.RenewSubscription(paramConnexion);
        }
        
        public EudoSynchroExchangeInterface.ResponseContract DeactivateUsers(EudoSynchroExchangeInterface.AuthentificationContract[] listUsers) {
            return base.Channel.DeactivateUsers(listUsers);
        }
        
        public EudoSynchroExchangeInterface.ResponseContract DeactivateUser(EudoSynchroExchangeInterface.AuthentificationContract paramConnexion) {
            return base.Channel.DeactivateUser(paramConnexion);
        }
    }
}
